[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 1s
**.cmdenv-log-level = trace

image-path = ../../images

network = BasicProjectNetwork

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

sim-time-limit = 30s

**.scalar-recording = true
**.vector-recording = true

*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m


##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = true

##########################################################
# Obstacle parameters                                    #
##########################################################
#*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")
*.obstacles.debug=false
##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("launchd.xml")
*.manager.trafficLightModuleType = "org.car2x.veins.nodes.TrafficLight"

*.tls[*].mobility.x = 0
*.tls[*].mobility.y = 0
*.tls[*].mobility.z = 3

*.tls[*].applType = "org.car2x.veins.modules.application.traci.TraCIDemoTrafficLightApp"
*.tls[*].logicType ="org.car2x.veins.modules.world.traci.trafficLight.logics.TraCITrafficLightSimpleLogic"


##########################################################
#                       RSU SETTINGS                     #
#                                                        #
#                                                        #
##########################################################
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

*.rsu[*].applType = "TraCIDemoRSU11p"
*.rsu[*].appl.headerLength = 80 bit
*.rsu[*].appl.sendBeacons = true
*.rsu[*].appl.dataOnSch = false
*.rsu[*].appl.beaconInterval = 1s
*.rsu[*].appl.beaconUserPriority = 7
*.rsu[*].appl.dataUserPriority = 5
*.rsu[*].nic.phy80211p.antennaOffsetZ = 0 m

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false
*.**.nic.mac16094.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 20mW
*.**.nic.mac1609_4.bitrate = 6Mbps
*.**.nic.phy80211p.minPowerLevel = -110dBm

*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -98dBm

*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

*.**.nic.phy80211p.antenna = xmldoc("antenna.xml", "/root/Antenna[@id='monopole']")
*.node[*].nic.phy80211p.antennaOffsetY = 0 m
*.node[*].nic.phy80211p.antennaOffsetZ = 1.895 m

##########################################################
#                      App Layer                         #
##########################################################
*.node[*].applType = "MyVeinsApp"
*.node[*].appl.headerLength = 80 bit
*.node[*].appl.sendBeacons = true
*.node[*].appl.dataOnSch = false
*.node[*].appl.beaconInterval = 1s

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].veinsmobility.x = 0
*.node[*].veinsmobility.y = 0
*.node[*].veinsmobility.z = 0
*.node[*].veinsmobility.setHostSpeed = false
*.node[*0].veinsmobility.accidentCount = 0
*.node[*0].veinsmobility.accidentStart = 5s
*.node[*0].veinsmobility.accidentDuration = 50s


# Enable PCAP recording in the default configuration
**.node[*].nic.mac1609_4.useAcks = true
**.node[*].nic.mac1609_4.pcapRecording = true
**.node[*].nic.mac1609_4.pcapFile = "results/vehicle-network.pcap"

# Set up statistics recording
*.node[*].veinsmobility.collectStatistics = true
*.rsu[*].applLayer.collectStatistics = true

# Record specific metrics
*.node[*].applLayer.packetReceived.vector-recording = true
*.node[*].applLayer.rssi.vector-recording = true


[Config Default]

[Config WithBeaconing]
*.rsu[*].appl.sendBeacons = true
*.node[*].appl.sendBeacons = true

[Config WithChannelSwitching]
*.**.nic.mac1609_4.useServiceChannel = true
*.node[*].appl.dataOnSch = true
*.rsu[*].appl.dataOnSch = true

[Config WithPacketRecording]
extends = WithBeaconing

# PCAP recording for all vehicles
*.**.nic.mac1609_4.useAcks = true
*.node[*].nic.mac1609_4.useAcks = true
*.node[*].nic.mac1609_4.useServiceChannel = false
*.node[*].nic.mac1609_4.txPower = 20mW
*.node[*].nic.mac1609_4.bitrate = 6Mbps

# Recording activation for all packets
**.node[*].nic.mac1609_4.pcapRecording = true
**.node[*].nic.mac1609_4.pcapFile = "results/vehicle-network.pcap"

# Use veins 5.3.1.
# You may need to use this command: python C:\Users\$env:USERNAME\veins-veins-5.3.1\bin\veins_launchd -vv -c "C:\Program Files (x86)\Eclipse\Sumo\bin\sumo-gui.exe"
# To recover packets on python you need to modify TraCIDemo11p.cc to handle it.